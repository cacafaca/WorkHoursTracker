<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:vm="clr-namespace:ProCode.WorkHoursTracker.ViewModels">
    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->
    <ContextMenu x:Shared="false"
                 x:Key="SysTrayMenu">
        <MenuItem Header="Add log"
                  Command="{Binding AddLogCommand}">
            <MenuItem.Icon>✎</MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Show Work Hours"
                  Command="{Binding ShowExcelCommand}">
            <MenuItem.Icon>👁</MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Config"
                  Command="{Binding ConfigCommand}">
            <MenuItem.Icon>⚙</MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="Exit"
                  Command="{Binding ExitApplicationCommand}">
            <MenuItem.Icon>🗙</MenuItem.Icon>
        </MenuItem>
    </ContextMenu>
    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="/Images/App.ico"
                    ToolTipText="Double-click for window, right-click for menu"
                    DoubleClickCommand="{Binding AddLogCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">
        <!-- self-assign a data context (could also be done programmatically) -->
        <tb:TaskbarIcon.DataContext>
            <vm:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>
</ResourceDictionary>